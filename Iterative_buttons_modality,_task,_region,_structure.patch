Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docker-compose.yml	(revision 3e9a8611a70f5b08faf89f16f6f1bdfca7dea533)
+++ docker-compose.yml	(date 1538490829502)
@@ -36,6 +36,7 @@
       memcached:
         condition: service_started
     volumes:
+      - ./app/:/app/
       - static:/static/
       - media:/dbox/Dropbox/media/
       # The docker socket is only needed for testing
Index: app/grandchallenge/challenges/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/grandchallenge/challenges/models.py	(revision 3e9a8611a70f5b08faf89f16f6f1bdfca7dea533)
+++ app/grandchallenge/challenges/models.py	(date 1538670127757)
@@ -297,13 +297,18 @@
         classes.append(self.get_host_id())
 
         #Filter by modality
-
-        filter_mod = "MR" #loop over all modalities or pk
-
         for mod in self.modalities.all():
-            print(mod)
-            if mod.modality == filter_mod:
-                classes.append("modality-" + filter_mod)
+            classes.append("modality-" + mod.modality)
+
+        # Filter by body region and structure
+        for struc in self.structures.all():
+            if ("region-" + struc.region.region) not in set(classes): #avoid region duplicates
+                classes.append("region-" + struc.region.region)
+            classes.append("structure-" + struc.structure)
+
+        # Filter by task type
+        for tas in self.task_types.all():
+            classes.append("task-" + tas.type)
 
         return " ".join(classes)
 
Index: app/grandchallenge/challenges/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/grandchallenge/challenges/views.py	(revision 3e9a8611a70f5b08faf89f16f6f1bdfca7dea533)
+++ app/grandchallenge/challenges/views.py	(date 1538657828477)
@@ -17,7 +17,7 @@
     ChallengeUpdateForm,
     ExternalChallengeUpdateForm,
 )
-from grandchallenge.challenges.models import Challenge, ExternalChallenge
+from grandchallenge.challenges.models import Challenge, ExternalChallenge, BodyRegion, BodyStructure, ImagingModality, TaskType
 from grandchallenge.core.permissions.mixins import (
     UserIsChallengeAdminMixin,
     UserIsStaffMixin,
@@ -59,10 +59,19 @@
             challenges_by_year,
         )
 
+        modalities = ImagingModality.objects.all()
+        task_types = TaskType.objects.all()
+        body_structures = BodyStructure.objects.all()
+        body_regions = [reg.region for reg in BodyRegion.objects.all()]
+
         # Cannot use a defaultdict in django template so convert to dict,
         # and this must be ordered by year for display
         context.update(
             {
+                "modalities": modalities,
+                "body_regions": body_regions,
+                "body_structures": body_structures,
+                "task_types": task_types,
                 "challenges_by_year": OrderedDict(
                     sorted(
                         challenges_by_year.items(),
Index: app/grandchallenge/core/management/commands/initcomicdemo.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/grandchallenge/core/management/commands/initcomicdemo.py	(revision 3e9a8611a70f5b08faf89f16f6f1bdfca7dea533)
+++ app/grandchallenge/core/management/commands/initcomicdemo.py	(date 1538491440329)
@@ -120,10 +120,10 @@
                 "MR",
                 "XR",
                 "PET",
-                "PET/CT",
-                "PET/MR",
+                "PET-CT",
+                "PET-MR",
                 "Mammography",
-                "CT/MR",
+                "CT-MR",
                 "US",
                 "TEM",
                 "Histology",
Index: .dockerignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .dockerignore	(date 1538483319513)
+++ .dockerignore	(date 1538483319513)
@@ -0,0 +1,3 @@
+__pycache__
+*.pyc
+.git/
