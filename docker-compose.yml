version: '2.3'

services:

  postgres:
    image: postgres:10.4
    environment:
      - POSTGRES_PASSWORD=secretpassword
      - POSTGRES_USER=comic
      - POSTGRES_DB=comic
    restart: always

  web:
    build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
      args:
       - PIPENV_DEV=--dev
    environment:
      - GOOGLE_ANALYTICS_ID=UA-XXXXX-Y
    command: >-
        dockerize -wait tcp://postgres:5432 -timeout 120s bash -c "
        [ -e /static ] || rm -rf /static
        && python manage.py collectstatic --noinput
        && mkdir -p /dbox/Dropbox/media/
        && python manage.py migrate
        && python manage.py check_permissions
        && python manage.py initcomicdemo
        && gunicorn -b 0.0.0.0 config.wsgi
        "
    restart: always
    links:
      - memcached
      - postgres
    volumes:
      - static:/static/
      - media:/dbox/Dropbox/media/
      - ./app:/app/
      # The docker socket is only needed for testing
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - 999 # The docker group is only needed for testing

  http:
    build: ./dockerfiles/http
    environment:
      - SERVER_NAME=localhost
      - SENDFILE_STATUS=off
    command: >-
        bash -c "envsubst '$$SERVER_NAME $$SENDFILE_STATUS' < /tmp/nginx.conf.template > /etc/nginx/nginx.conf
        && openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/private/$$SERVER_NAME.key -out /etc/ssl/certs/$$SERVER_NAME.crt -days 365 -nodes -subj '/CN=$$SERVER_NAME'
        && nginx -g 'daemon off;'"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    links:
      - web
    volumes:
      - static:/srv/public/static/:ro
      - media:/dbox/Dropbox/media/:ro

  memcached:
    image: memcached:1.4
    restart: always

  redis:
    image: redis:4.0
    command: redis-server --appendonly yes
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
    restart: always
    command: >-
      bash -c "
      sleep 120
      && celery -A config worker -l info -c 2
      "
    links:
      - postgres
      - redis
      - web
    volumes_from:
      - web

  celery_worker_evaluation:
    build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
    restart: always
    command: >-
      bash -c "
      sleep 120
      && celery -A config worker -l info -Q evaluation -c 2
      "
    links:
      - postgres
      - redis
      - web
    volumes_from:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - 999

  celery_beat:
    build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
    restart: always
    command: >-
      bash -c "
      sleep 120
      && celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=\"/tmp/celerybeat.pid\"
      "
    links:
      - postgres
      - redis
      - web
    volumes_from:
      - web

  flower:
    image: crgwbr/docker-celery-flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    links:
      - redis
    restart: always

volumes:
  static:
  media:
