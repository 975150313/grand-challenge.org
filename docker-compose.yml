version: '2.3'

services:

  db:
    image: mariadb:10.1
    environment:
     - MYSQL_ALLOW_EMPTY_PASSWORD=yes
     - MYSQL_DATABASE=comic
    restart: always

  postgres:
    image: postgres:10.4
    environment:
      - POSTGRES_PASSWORD=secretpassword
      - POSTGRES_USER=comic
      - POSTGRES_DB=comic
    restart: always

  web:
    extends:
      file: docker-compose.common.yml
      service: web
    links:
      - db:mysql
      - memcached
    volumes:
      - static:/static/
      - media:/dbox/Dropbox/media/
      - ./app:/app/
      # The docker socket is only needed for testing
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - 999 # The docker group is only needed for testing
    build:
      args:
        - PIPENV_DEV=--dev

  http:
    extends:
      file: docker-compose.common.yml
      service: http
    ports:
      - "80:80"
      - "443:443"
    links:
      - web
    volumes:
      - static:/srv/public/static/:ro
      - media:/dbox/Dropbox/media/:ro

  memcached:
    extends:
      file: docker-compose.common.yml
      service: memcached

  redis:
    extends:
      file: docker-compose.common.yml
      service: redis

  celery_worker:
    extends:
      file: docker-compose.common.yml
      service: web
    command: >-
      bash -c "
      sleep 120
      && celery -A config worker -l info -c 2
      "
    links:
      - db:mysql
      - postgres
      - redis
      - web
    volumes_from:
      - web

  celery_worker_evaluation:
    extends:
      file: docker-compose.common.yml
      service: web
    command: >-
      bash -c "
      sleep 120
      && celery -A config worker -l info -Q evaluation -c 2
      "
    links:
      - db:mysql
      - postgres
      - redis
      - web
    volumes_from:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - 999

  celery_beat:
    extends:
      file: docker-compose.common.yml
      service: web
    command: >-
      bash -c "
      sleep 120
      && celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=\"/tmp/celerybeat.pid\"
      "
    links:
      - db:mysql
      - postgres
      - redis
      - web
    volumes_from:
      - web

  flower:
    image: crgwbr/docker-celery-flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    links:
      - redis
    restart: always

volumes:
  static:
  media:
