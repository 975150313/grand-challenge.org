version: '2'

services:

  db:
    image: mariadb:10.1
    environment:
     - MYSQL_ALLOW_EMPTY_PASSWORD=yes
     - MYSQL_DATABASE=comic
    restart: always

  web:
    extends:
      file: docker-compose.common.yml
      service: web
    links:
      - db:mysql
      - memcached
    volumes:
      - static:/static/
      - media:/www-media/
      - ./app:/app/
      # The docker socket is only needed for testing
      - /var/run/docker.sock:/var/run/docker.sock

  http:
    extends:
      file: docker-compose.common.yml
      service: http
    ports:
      - "80:80"
      - "443:443"
    links:
      - web
    volumes:
      - static:/srv/public/static/:ro
      - media:/srv/public/media/:ro

  memcached:
    extends:
      file: docker-compose.common.yml
      service: memcached

  rabbitmq:
    extends:
      file: docker-compose.common.yml
      service: rabbitmq
    ports:
      - "8080:15672"

#  celery_worker:
#    extends:
#      file: docker-compose.common.yml
#      service: web
#    # TODO: check the server response for 200 OK
#    command: >-
#      dockerize -wait tcp://web:8000 -timeout 120s bash -c "
#      celery -A comic worker -l info
#      "
#    links:
#      - db:mysql
#      - rabbitmq
#      - web
#    volumes:
#      - ./app:/app/
#      - /var/run/docker.sock:/var/run/docker.sock
#
#  celery_beat:
#    extends:
#      file: docker-compose.common.yml
#      service: web
#    command: >-
#      dockerize -wait tcp://web:8000 -timeout 120s bash -c "
#      celery -A comic beat -l info
#      "
#    links:
#      - db:mysql
#      - rabbitmq
#      - web
#    volumes:
#      - ./app:/app/

  flower:
    image: crgwbr/docker-celery-flower
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
    ports:
      - "5555:5555"
    links:
      - rabbitmq
    restart: always

volumes:
  static:
  media:
